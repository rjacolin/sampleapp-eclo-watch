<%- include header.ejs %>

<div class="container">
	<div class="row">
		<div class="col-lg-12">
			<div class="panel panel-default">
				<div class="panel-body" style="padding: 0px;">
					<div style="height: 700px" id="map"></div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="/openlayers/lib/OpenLayers.js"></script>

<script defer="defer" type="text/javascript">
    try {
        // Define styling for marker
        var bluemarker = '/img/marker-blue.png'
        var redmarker = '/img/marker-red.png'
        var systemslayer = new OpenLayers.Layer.Vector('Overlay', {
            styleMap : new OpenLayers.StyleMap({
                externalGraphic : '${marker}',
                graphicWidth : 25,
                graphicHeight : 41,
                graphicYOffset : -41,
                title : '${tooltip}',
                cursor : 'pointer'
            }),
        });

        // Get all systems
        var systems = <%- JSON.stringify(systems) %>;

        // Add 1 feature (graphic marker in our case) for each systems
        var features = new Array();
        for (var i = 0; i < systems.length; i++) {
            // get position
            var lon = parseFloat(systems[i].data.longitude)
            var lat = parseFloat(systems[i].data.latitude)
            // translate from lat/lon system to Spherical Mercator (see http://docs.openlayers.org/library/spherical_mercator.html)          
            var mylocation = new OpenLayers.Geometry.Point(lon, lat).transform('EPSG:4326', 'EPSG:3857');
            // define marker color
            var marker = systems[i].alerts_count ? redmarker : bluemarker;
            // add feature(system to layer)
            features[i] = new OpenLayers.Feature.Vector(mylocation, {
                tooltip : systems[i].name,
                marker : marker,
                url : 'systems/details?uid=' + systems[i].uid
            });
        }
        systemslayer.addFeatures(features);

        // Finally we create the map
        map = new OpenLayers.Map({
            div : "map",
            layers : [ new OpenLayers.Layer.OSM(), systemslayer ]
        });

        // auto zoom and center
        map.zoomToExtent(systemslayer.getDataExtent());

        // define listener on feature(systems) selection.
        selectControl = new OpenLayers.Control.SelectFeature(systemslayer);
        map.addControl(selectControl);
        selectControl.activate();
        systemslayer.events.on({
            featureselected : function(evt) {
                window.location.href = evt.feature.attributes.url
                // COMESTIC HACK to avoid to see broken image in google chrome 
                document.getElementById('map').style.visibility='hidden';
            }
        });
    } catch (err) {
        console.error(err)
    }
</script>

<%- include footer.ejs %>
