<%- include header.ejs %>
<!-- we use cdn support waiting better bower integration -->
<link rel="stylesheet"
	href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
<!--[if lte IE 8]>
     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css" />
 <![endif]-->

<div class="container">
	<div class="row">
		<div class="col-lg-12">
			<div class="page-header">
				<h1>Map</h1>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-12">
			<div class="panel panel-default">
				<div class="panel-body" style="padding: 0px;">
					<div style="height: 700px" id="map"></div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- we use cdn support waiting better bower integration -->
<script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>

<script defer="defer" type="text/javascript">
    try {
        //Use default blue icon for system which is not in alert
        var blueIcon = new L.Icon.Default();
        //Define red icon for system in alert from default icon
        var RedIcon = L.Icon.Default.extend({
            options : {
                iconUrl : '/img/marker-icon-red.png'
            }
        });
        var redIcon = new RedIcon();

        //Create the map
        var map = L.map('map');

        //Define default map layer (we use opentreetmap but cloudmade, mapquest ... could be used)
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution : 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors.',
            maxZoom : 18
        }).addTo(map);

        // Get all systems
        var systems = <%- JSON.stringify(systems) %>;

        // Add 1 marker for each systems
        var markers = new Array();
        for (var i = 0; i < systems.length; i++) {
            // get position
            var lon = parseFloat(systems[i].data.longitude)
            var lat = parseFloat(systems[i].data.latitude)
            // define icon color from alert state
            var icon = systems[i].alerts_count ? redIcon : blueIcon;
            markers[i] = L.marker([ lat, lon ], {
                icon : icon,
                title : systems[i].name,
                url : 'systems/details?uid=' + systems[i].uid
            }).on('click', function(e) {
                window.location.href = e.target.options.url;
            });            
        }
        var systemsfeaturegroup = L.featureGroup(markers).addTo(map)

        // autozoom / auto center on systems
        map.fitBounds(systemsfeaturegroup.getBounds())
    } catch (err) {
        console.error(err)
    }
</script>

<%- include footer.ejs %>
